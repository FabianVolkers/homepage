"""
Django settings for homepage project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import random

from django.utils.translation import gettext_lazy as _
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

DEFAULTS = {

}
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


DEV_MODE = os.getenv('DEV_MODE', False)
DATABASE = os.getenv('DATABASE', 'sqlite')

if DEV_MODE:
    PROTO = 'http'
    HOST = '127.0.0.1'
    PORT = '8000'
    MEDIA_URL = os.getenv('MEDIA_URL', '/media/')
    MEDIA_ROOT = os.getenv('MEDIA_ROOT', os.path.join(BASE_DIR, 'media/'))
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
    if DATABASE == 'sqlite':
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.sqlite3',
                'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
            }
        }
    elif DATABASE == 'postgres':
        DATABASES = {
            "default": {
                "ENGINE": "django.db.backends.postgresql",
                "NAME": os.getenv('POSTGRES_DB'),
                "USER": os.getenv('POSTGRES_USER'),
                "PASSWORD": os.getenv('POSTGRES_PASSWORD'),
                "HOST": os.getenv('DATABASE_HOST'),
                "PORT": os.getenv('DATABASE_PORT'),
            }
        }
else:
    PROTO = 'https'
    HOST = os.getenv('HOST')
    MEDIA_URL = os.getenv('MEDIA_URL', f'{PROTO}://media.{HOST}')
    MEDIA_ROOT = os.getenv('MEDIA_ROOT', '/var/www/media')
    if DATABASE == 'sqlite':
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.sqlite3',
                'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
            }
        }
    elif DATABASE == 'postgres':
        DATABASES = {
            "default": {
                "ENGINE": "django.db.backends.postgresql",
                "NAME": os.getenv('POSTGRES_DB'),
                "USER": os.getenv('POSTGRES_USER'),
                "PASSWORD": os.getenv('POSTGRES_PASSWORD'),
                "HOST": os.getenv('DATABASE_HOST'),
                "PORT": os.getenv('DATABASE_PORT'),
            }
        }

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/3.0/howto/static-files/

    STATIC_ROOT = os.path.join(BASE_DIR, 'static')

STATIC_URL = os.getenv('STATIC_URL', '/static/')
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', ''.join(random.SystemRandom().choice(
    'abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)') for i in range(50)))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = DEV_MODE

ALLOWED_HOSTS = [
    HOST,
    '0.0.0.0'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'portfolio.apps.PortfolioConfig',
    'django_inlinecss'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
]

ROOT_URLCONF = 'homepage.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media'
            ],
        },
    },
]

WSGI_APPLICATION = 'homepage.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en'

LANGUAGES = [
    ('de', _('German')),
    ('en', _('English')),
    ('nl', _('Dutch'))
]

LOCALE_PATHS = [
    f'{BASE_DIR}/locale',
]

LANGUAGE_COOKIE_NAME = 'djangolanguage'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Emails
EMAIL_USE_TLS = True
EMAIL_HOST = os.getenv("EMAIL_HOST")
EMAIL_PORT = 587
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
EMAIL_CONTACT_ADDRESS = os.getenv('EMAIL_CONTACT_ADDRESS')
DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL")

MAX_PAGES = 10
MAX_SECTIONS = 10
MAX_NAVLINKS = 10
MAX_FOOTERLINKS = 10
